plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'kr.co.upchain'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // db, mybatis
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.0.5'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
    implementation 'org.springframework:spring-tx:6.0.6'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-autoconfigure:3.0.1'

    // exception logging
    implementation 'org.apache.commons:commons-lang3:3.10'

    // file
    implementation 'commons-io:commons-io:2.11.0'

    // redis
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'redis.clients:jedis:3.3.0'
}

test {
    useJUnitPlatform()
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources/resources-${profile}"
            exclude "resources-*"
        }
    }
}

jar {
    enabled = true
}
bootJar {
    enabled = false
}